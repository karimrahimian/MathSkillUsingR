return (sortedMatrix)
}
oncoplot12<-function(lamf){
lamfData = lamf@data
hugoSymbols = getOrderedUniqueHugoNames(lamfData$Hugo_Symbol)
samples = getOrderedUniqueSamples(lamfData$Tumor_Sample_Barcode)
variants = getUniqueVariants(lamfData$Variant_Classification)
rowSize = nrow(hugoSymbols)
colSize = nrow(samples)
variantSize = nrow(variants)
dataMatrix = matrix(0,rowSize,colSize)
rightBar = matrix(0,rowSize,variantSize)
topBar = matrix(0,colSize,variantSize)
buttonBar =matrix(0,colSize,3)
lamfDataSize = nrow(lamfData)
for (i in 1:lamfDataSize){
row = lamfData[i,]
index_hugo = which(hugoSymbols$hugoNames == row$Hugo_Symbol)
index_sample = which(samples$samples == row$Tumor_Sample_Barcode)
index_variant = which(variants$variant == row$Variant_Classification)
tumor_sample_Alelle = row$Tumor_Seq_Allele2
referenceAllele = row$Reference_Allele
if (length(index_hugo)>0 && length(index_sample)>0  && length(index_variant)>0){
dataMatrix [index_hugo,index_sample] = index_variant
if (tumor_sample_Alelle=="C"){
if (referenceAllele == "T"){
buttonBar[index_sample,1] = buttonBar[index_sample,1]+1
}else if (referenceAllele == "G"){
buttonBar[index_sample,2] = buttonBar[index_sample,2]+1
}else if (referenceAllele == "A"){
buttonBar[index_sample,3] = buttonBar[index_sample,3]+1
}
}
}
}
dataMatrix = sortMatrix(dataMatrix)
sortedIndex = order(rowSums(dataMatrix))
dataMatrix = dataMatrix[sortedIndex,]
zeroColumnIndex = which(colSums(dataMatrix) != 0 )
dataMatrix = dataMatrix[, zeroColumnIndex ]
topBar = topBar[zeroColumnIndex,]
buttonBar = buttonBar[zeroColumnIndex,]
rowSize = nrow(dataMatrix)
colSize = ncol(dataMatrix)
for (i in 1:rowSize){
for (j in 1:colSize){
index_variant = dataMatrix[i,j]
rightBar[i,index_variant] = rightBar[i,index_variant] + 1
topBar[j,index_variant] = topBar[j,index_variant] + 1
}
}
return (list("data"=dataMatrix,
"yLabel" = c(hugoSymbols$hugoNames[sortedIndex]),
"rightBar"= rightBar,
"xLabel" = c(samples$samples),
"topBar" = topBar,
"buttonBar" = buttonBar,
"variants"=c(variants$variants)))
}
#path to TCGA LAML MAF file
laml.maf = system.file('extdata', 'tcga_laml.maf.gz', package = 'maftools')
#clinical information containing survival information and histology. This is optional
#laml.clin = system.file('extdata', 'tcga_laml_annot.tsv', package = 'maftools')
laml = read.maf(maf = laml.maf,
#clinicalData = laml.clin,
verbose = FALSE)
#head(laml@data)
#oncoplot(laml@data)
result = oncoplot12(laml)
pdf('result.pdf')
drawHeatmap(result$data,
result$xLabel,
result$yLabel,
result$rightBar,
result$topBar,
result$buttonBar,
result$variants)
dev.off()
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
View(result$data)
rowSums(result$data)
rowSums(result$data>0)
table(laml@data$Hugo_Symbol)
order(table(laml@data$Hugo_Symbol))
order(table(laml@data$Hugo_Symbol)$Freq)
hugo  = table(laml@data$Hugo_Symbol)
hugo
hugo = data.frame(hugo)
hugo$Freq>=5
orderedHugo = hugo[hugo$Freq>=5]
getOrderedUniqueHugoNames(laml@data$Hugo_Symbol)
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
rowSums(result$data)
rowSums(result$data>0)
debugSource("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
sumRows(dataMatrix>0)
rowSums(dataMatrix>0)
View(hugoSymbols)
debugSource("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
sumRows(daraMatrix)
rowSums(daraMatrix>0)
rowSums(dataMatrix>0)
debugSource("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
hugo$Freq
result$data[0,1]
result$data[1,1]
result$data[0,0]
result$data[0,1]
debugSource("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
debugSource("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
View(dataMatrix)
rowSums(dataMatrix>0)
rowSums(dataMatrix[1,]>0)
sum(dataMatrix[1,]>0)
debugSource("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
View(variants)
debugSource("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
debugSource("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
debugSource("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
debugSource("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
debugSource("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
debugSource("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
debugSource("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
dataMatrix
View(dataMatrix)
sum(dataMatrix[1,])
sum(dataMatrix[1,]>0)
sum(dataMatrix[2,]>0)
d= dataMatrix[order(rowSums(dataMatrix)),]
sum(d[1,]>0)
d= dataMatrix[order(rowSums(dataMatrix),decreasing = TRUE),]
rowSums(d>0)
rowSums(d>=0)
rowSums(d!=0)
View(d)
sum(d)
dataMatrix
sumRow(dataMatrix>0)
rowSums(dataMatrix>0)
s= rowSums(dataMatrix>0)
s= rowSums(dataMatrix>0)
data = result$data
sumation = rowSum(data>0)
sumation = rowSums(data>0)
sumation
sumation[1]
order(sumation)
order(sumation,decreasing = TRUE)
index = order(sumation,decreasing = TRUE)
newdata = data[index,:]
newdata = data[index,]
newsumation = rowSums(newdata)
newsumation
newsumation = rowSums(newdata>0)
newsumation
debugSource("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
newSum
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
debugSource("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
newSum
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/Homework2/potplot.R")
class(c(TRUE,FALSE))
class(3+1i)
class(1)
class(1l)
class(1L)
class(0.5:4.5)
class(1:5)
class(c('she','sells','seashells',''on))
class(c('she','sells','seashells','on'))
gender <- factor(c("male", "female", "female", "male", "female"))
class(gender)
gender
levels(c('male','female','female','male','female'))
levels(c("male","female","female","male","female"))
levels(gender)
nlevels(gender)
as.integer(gender)
gender_char <- sample(c("female", "male"), 10000, replace = TRUE)
gender_char
gender_fac <- as.factor(gender_char)
gender_fac
levels(gender_char)
levels(gender_fac)
object.size(gender_char)
as.character(gender)
as.raw(17)
as.character(gender)
as.raw(1:17)
as.raw(c(pi, 1 + 1i, -1, 256))
sushi <- charToRaw("Fish!")
sushi
class(sushi)
is.logical(TRUE)
is.logical(FALSE)
is.list(list(a=1,b=2,c3))
is.list(list(a=1,b=2,c=3))
x= list(a=1,b=2,c=3)
x
is.logical(FALSE)
ls(pattern = "^is",baseenv())
baseenv()
baseenv()
pattern("is",baseenv())
is(pattern("is",baseenv()))
ls(pattern("is",baseenv()))
ls(baseenv())
ls(pattern='is',baseenv())
ulams_spiral <- c(1, 8, 23, 46, 77)
for(i in ulams_spiral) print(i)
num <- runif(30)
summary(num)
num
summary(num)
fac <- factor(sample(letters[1:5], 30, replace = TRUE))
fac <- factor(sample(letters[1:5], 30, replace = TRUE))
summary(fac)
bool <- sample(c(TRUE, FALSE, NA), 30, replace = TRUE)
summary(bool)
dfr <- data.frame(num, fac, bool)
head(dfr)
summary(dfr)
str(num)
str(dfr)
unclass(fac)
attributes(fac)
unclass(fac)
attributes(fac
)
View(dfr)
new_dfr <- edit(dfr)
new_dir
new_dfr
fix(dfr)
peach <- 1
plum <- "fruity"
pear <- TRUE
ls()
all.names = TRUE
browseEnv()
rm(peach, plum, pear)
rm(list = ls())
rm(peach, plum, pear)
rm(list = ls())
as.numeric("321.13")
a=1
fix(a)
class(INF)
class(inf)
class(Inf)
class(Na)
class(NA)
class(NaN)
animals = sample(c("cat","dog","fish","hamesfer","gold Fish"),1000,resample = TRUE)
animals = sample(c("cat","dog","fish","hamesfer","gold Fish"),1000,replace =  = TRUE)
animals = sample(c("cat","dog","fish","hamesfer","gold Fish"),1000,replace =  = TRUE)
animals = sample(c("cat","dog","fish","hamesfer","gold Fish"),1000,replace = TRUE)
animals[1:5]
factor(animals)
animals = sample(c("cat","dog","fish","hamesfer","gold Fish"),1000,replace = TRUE)
animals[1:5]
fac = factor(animals)
summary(fac)
8.5:4.5
c(1,1:3,c(5,8),13)
vector("numeric",5)
vector("complex",5)
vetor("logical",5)
vector("logical",5)
vector("character",5)
vector("list",5)
numeric(5)
complex(5)
logical(5)
character(5)
seq.int(3,12)
seq.int(0.1,0.01,-0.01)
n=0
1:n
seq_len(n)
pp <- c("Peter", "Piper", "picked", "a", "peck", "of", "pickled", "peppers")
for(i in seq_along(pp)) print(pp[i])
length(1:5)
length(c(TRUE,FALSE,NA))
sn <- c("Sheena", "leads", "Sheila", "needs")
length(sn)
nchar(sn)
poincare <- c(1, 0, 0, 0, 2, 0, 2, 0)
length(poincare) <- 3
pointcare
poincare
length(poincare) <- 8
poincare
c(apple = 1, banana = 2, "kiwi fruit" = 3, 4)
x <- 1:4
names(x) <- c("apple", "bananas", "kiwi fruit", "")
x
names(x)
names(1:4)
x= (1:5)^2
x[c(1,3,5)]
x[c(-2,-4)]
x[c(TRUE, FALSE, TRUE, FALSE, TRUE)]
names(x) <- c("one", "four", "nine", "sixteen", "twenty five")
x[c("one", "nine", "twenty five")]
x[c(1, -1)]
x[c(1, NA, 5)]
x[c(TRUE, FALSE, NA, FALSE, TRUE)]
x[1.9]
x[-1.9]
which(x>10)
which.min(x)
which.max(x)
1:5+1
1+1:5
1:5+1:15
1:5+1:7
rep(1:5,3)
rep(1:5,each=3)
rep(1:5,times1:5)
rep(1:5,times=1:5)
rep(1:5,length.out=7)
rep.int(1:5,3)
rep_len(1:5,13)
(three_d_array <- array(
1:24,
dim = c(4, 3, 2),
dimnames = list(
c("one", "two", "three", "four"),
c("ein", "zwei", "drei"),
c("un", "deux")
)
))
(a_matrix <- matrix(
1:12,
nrow = 4,
#ncol = 3 works the same
dimnames = list(
c("one", "two", "three", "four"),
c("ein", "zwei", "drei")
)
))
(two_d_array <- array(
1:12,
dim = c(4, 3),
dimnames = list(
c("one", "two", "three", "four"),
c("ein", "zwei", "drei")
)
))
class(two_d_array)
matrix(
1:12,
nrow = 4,
byrow = TRUE,
dimnames = list(
c("one", "two", "three", "four"),
c("ein", "zwei", "drei")
)
)
dim(three_d_array)
dim(a_matrix)
nrow(a_matrix)
ncol(a_matrix)
nrow(three_d_array)
ncol(three_d_array)
length(three_d_array)
length(a_matrix)
dim(a_matrix) <- c(6, 2)
identical(nrow(a_matrix), NROW(a_matrix))
identical(ncol(a_matrix), NCOL(a_matrix))
recaman <- c(0, 1, 3, 6, 2, 7, 13, 20)
nrow(recaman)
NROW(recaman)
ncil(recaman)
ncol(recaman)
NCOL(recaman)
dim(recaman)
rownames(a_matrix)
colnames(a_matrix)
dimnames(a_matrix)
rownames(three_d_array)
colnames(three_d_array)
colnames(three_d_array)
dimnames(three_d_array)
dimnames(three_d_array)
a_matrix[1, c("zwei", "drei")]
(a_matrix <- matrix(
1:12,
nrow = 4,
#ncol = 3 works the same
dimnames = list(
c("one", "two", "three", "four"),
c("ein", "zwei", "drei")
)
))
a_matrix[1, c("zwei", "drei")]
a_matrix[1, ]
a_matrix[, c("zwei", "drei")]
(another_matrix <- matrix(
seq.int(2, 24, 2),
nrow = 4,
dimnames = list(
c("five", "six", "seven", "eight"),
c("vier", "funf", "sechs")
)
))
c(a_matrix, another_matrix)
cbind(a_matrix, another_matrix)
rbind(a_matrix, another_matrix)
a_matrix + another_matrix
a_matrix * another_matrix
(another_matrix <- matrix(1:12, nrow = 2))
a_matrix + another_matrix
a_matrix + another_matrix
t(a_matrix)
a_matrix %*% t(a_matrix)
1:3 %o% 4:6
outer(1:3, 4:6)
(m <- matrix(c(1, 0, 1, 5, -3, 1, 2, 4, 7), nrow = 3))
m^-1
(inverse_of_m <- solve(m))
m %*% inverse_of_m
0:0.25:1
seq.int(0, 1, 0.25)
c(apple = 1, banana = 2, "kiwi fruit" = 3, 4)
myTriangular <- function(n) choose(seq(n),2)
myTriangular(5)
myTriangular(20)
choose(seq(20),2)
seq(20)
triangle =  choose(seq(20),2)
letters()
sample(letters,10)
letters
letters[1:20]
names(triangle) = letters[1:20]
triangle
triangle =  choose(seq(20),2)
names(triangle) = letters[1:20]
names[c('a','e','i','o')]
triangle[c('a','e','i','o')]
diag(10, 3, 4)
diag(x = 1, nrow, ncol, names = TRUE)
diag(x=1,21,21)
x= diag(1,21,21)
View(x)
t1= 1:11
t2=11:1
t=cbind(t1,t2)
t=rbind(t1,t2)
t1= seq.int(11,0)
t1= seq.int(11,0)
t1= c(seq.int(11,0),seq.int(0,11))
t1= c(seq.int(11,0),seq.int(1,11))
x = diag(t1,21,21)
x= diag(1,20,21)
r = integer(10)
r = integer(21)
rbind(r,x)
x= diag(1,20,21)
r = integer(21)
t = rbind(r,x)
View(t)
x1=z
x1=x
r= x1+x
d= c(seq.int(11,0),seq.int(1,11))
b = diag(d,21,21)
r = x1+x +b
t=t1
x= diag(1,20,21)
r = integer(21)
t = rbind(r,x)
t1=t
result = t+t1+b
eigen(result)
ei = eigen(result)
View(ei)
View(ei$values)
ei$values
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/TA/HW3/Question1-a.R")
setwd("~/Desktop/University/mathematic/exercise/MathSkillUsingR/TA/HW3")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/TA/HW3/Question1-a.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/TA/HW3/Question1-b.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/TA/HW3/question1-c.R")
source("~/Desktop/University/mathematic/exercise/MathSkillUsingR/TA/HW3/question1-d.R")
